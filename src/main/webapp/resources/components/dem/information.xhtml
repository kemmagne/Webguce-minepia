<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:composite="http://java.sun.com/jsf/composite"
    xmlns:dem="http://java.sun.com/jsf/composite/components/dem"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:p="http://primefaces.org/ui" xmlns:r="http://java.sun.com/jsf/composite/components/rep/elements">
    <composite:interface componentType="org.guce.web.component.Default">
        <f:loadBundle basename="org/guce/web/process/dem/util/Bundle" var="demBundle"/>
        <composite:attribute name="value" required="true" type="java.lang.Object"/>
        <composite:attribute name="requiredList" type="java.lang.String"/>
        <composite:attribute name="readOnlyList" type="java.lang.String"/>
        <composite:attribute name="renderedList" type="java.lang.String"/>
        <composite:attribute name="updateList" type="java.lang.String"/>
        <composite:attribute default="false" name="required" required="false"/>
        <composite:attribute default="true" name="renderedBoolean" required="false"/>
        <composite:attribute default="false" name="readOnly" required="false"/>
        <composite:attribute name="styleClass" required="false" type="java.lang.String"/>
        <composite:attribute default="false" name="returnSame"/>
        <composite:attribute name="fieldChange"/>
    </composite:interface>
    <composite:implementation>
        <f:loadBundle basename="org/guce/web/process/dem/util/Bundle" var="demBundle"/>
        <h:panelGrid columns="4" id="cblock" styleClass="#{cc.attrs.styleClass} informationBlock">
            <h:outputLabel for="niu" rendered="#{cc.isRendered('niu',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.niuLabel} <span>#{cc.isRequiredString('niu',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('niu',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
              <p:inputText
converterMessage="#{deBundle.niu} #{deBundle.invalid}"
id="niu" maxlength="35"
readonly="#{cc.isReadOnly('niu',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
rendered="#{cc.isRendered('niu',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
required="#{cc.isRequired('niu',cc.attrs.requiredList,cc.attrs.required)}"
requiredMessage="#{deBundle.niu} #{deBundle.required}"
size="35" style="width: 140px"
validatorMessage="#{deBundle.niu} #{deBundle.invalid}" value="#{cc.attrs.value.niu}">
<p:ajax event="change" update="@all" listener="#{dEMRequestController.findRaisonSocial(cc.attrs.value.niu)}" />
</p:inputText>
                <p:message for="niu"/>
            </h:panelGroup>
            <h:outputLabel for="socialReson" rendered="#{cc.isRendered('socialReson',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.socialResonLabel} <span>#{cc.isRequiredString('socialReson',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('socialReson',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{demBundle.socialReson} #{demBundle.invalid}"
                    id="socialReson" maxlength="35"
                    readonly="#{cc.isReadOnly('socialReson',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('socialReson',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('socialReson',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{demBundle.socialReson} #{demBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{demBundle.socialReson} #{demBundle.invalid}" value="#{cc.attrs.value.socialReson}"/>
                <p:message for="socialReson"/>
            </h:panelGroup>
            <h:outputLabel for="deliveryDate" rendered="#{cc.isRendered('deliveryDate',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.deliveryDateLabel} <span>#{cc.isRequiredString('deliveryDate',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('deliveryDate',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:calendar
                    converterMessage="#{demBundle.deliveryDate} #{demBundle.invalide}"
                    id="deliveryDate" mask="true" maxlength="17"
                    pattern="#{demBundle.dateFormat}"
                    readonly="#{cc.isReadOnly('deliveryDate',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    required="#{cc.isRequired('deliveryDate',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{demBundle.deliveryDate} #{demBundle.required}"
                    size="17"
                    validatorMessage="#{demBundle.deliveryDate} #{demBundle.invalide}" value="#{cc.attrs.value.deliveryDate}">
                    <f:convertDateTime pattern="#{demBundle.dateFormat}"/>
                </p:calendar>
                <p:message for="deliveryDate"/>
            </h:panelGroup>
            <h:outputLabel for="expirationDate" rendered="#{cc.isRendered('expirationDate',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.expirationDateLabel} <span>#{cc.isRequiredString('expirationDate',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('expirationDate',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:calendar
                    converterMessage="#{demBundle.expirationDate} #{demBundle.invalide}"
                    id="expirationDate" mask="true" maxlength="17"
                    pattern="#{demBundle.dateFormat}"
                    readonly="#{cc.isReadOnly('expirationDate',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    required="#{cc.isRequired('expirationDate',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{demBundle.expirationDate} #{demBundle.required}"
                    size="17"
                    validatorMessage="#{demBundle.expirationDate} #{demBundle.invalide}" value="#{cc.attrs.value.expirationDate}">
                    <f:convertDateTime pattern="#{demBundle.dateFormat}"/>
                </p:calendar>
                <p:message for="expirationDate"/>
            </h:panelGroup>
            <h:outputLabel for="tradeRegister" rendered="#{cc.isRendered('tradeRegister',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.tradeRegisterLabel} <span>#{cc.isRequiredString('tradeRegister',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('tradeRegister',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{demBundle.tradeRegister} #{demBundle.invalid}"
                    id="tradeRegister" maxlength="35"
                    readonly="#{cc.isReadOnly('tradeRegister',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('tradeRegister',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('tradeRegister',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{demBundle.tradeRegister} #{demBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{demBundle.tradeRegister} #{demBundle.invalid}" value="#{cc.attrs.value.tradeRegister}"/>
                <p:message for="tradeRegister"/>
            </h:panelGroup>
            <h:outputLabel for="declaration" rendered="#{cc.isRendered('declaration',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.declarationLabel} <span>#{cc.isRequiredString('declaration',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup id="declarationBlock">
                <dem:dEMDeclarationSelectMany field="declaration"
                    id="declaration"
                    readOnly="#{cc.isReadOnly('declaration',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('declaration',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('declaration',cc.attrs.requiredList,cc.attrs.required)}" value="#{cc.attrs.value}"/>
            </h:panelGroup>
            <h:outputLabel for="adresse" rendered="#{cc.isRendered('adresse',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.adresseLabel} <span>#{cc.isRequiredString('adresse',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('adresse',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{demBundle.adresse} #{demBundle.invalid}"
                    id="adresse" maxlength="35"
                    readonly="#{cc.isReadOnly('adresse',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('adresse',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('adresse',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{demBundle.adresse} #{demBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{demBundle.adresse} #{demBundle.invalid}" value="#{cc.attrs.value.adresse}"/>
                <p:message for="adresse"/>
            </h:panelGroup>
            <h:outputLabel for="poxBose" rendered="#{cc.isRendered('poxBose',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.poxBoseLabel} <span>#{cc.isRequiredString('poxBose',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('poxBose',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{demBundle.poxBose} #{demBundle.invalid}"
                    id="poxBose" maxlength="35"
                    readonly="#{cc.isReadOnly('poxBose',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('poxBose',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('poxBose',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{demBundle.poxBose} #{demBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{demBundle.poxBose} #{demBundle.invalid}" value="#{cc.attrs.value.poxBose}"/>
                <p:message for="poxBose"/>
            </h:panelGroup>
            <h:outputLabel for="emailAdress" rendered="#{cc.isRendered('emailAdress',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.emailAdressLabel} <span>#{cc.isRequiredString('emailAdress',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('emailAdress',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{demBundle.emailAdress} #{demBundle.invalid}"
                    id="emailAdress" maxlength="35"
                    readonly="#{cc.isReadOnly('emailAdress',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('emailAdress',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('emailAdress',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{demBundle.emailAdress} #{demBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{demBundle.emailAdress} #{demBundle.invalid}" value="#{cc.attrs.value.emailAdress}"/>
                <p:message for="emailAdress"/>
            </h:panelGroup>
            <h:outputLabel for="town" rendered="#{cc.isRendered('town',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.townLabel} <span>#{cc.isRequiredString('town',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('town',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{demBundle.town} #{demBundle.invalid}"
                    id="town" maxlength="35"
                    readonly="#{cc.isReadOnly('town',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('town',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('town',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{demBundle.town} #{demBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{demBundle.town} #{demBundle.invalid}" value="#{cc.attrs.value.town}"/>
                <p:message for="town"/>
            </h:panelGroup>
            <h:outputLabel for="mobilePhone" rendered="#{cc.isRendered('mobilePhone',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.mobilePhoneLabel} <span>#{cc.isRequiredString('mobilePhone',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('mobilePhone',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{demBundle.mobilePhone} #{demBundle.invalid}"
                    id="mobilePhone" maxlength="35"
                    readonly="#{cc.isReadOnly('mobilePhone',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('mobilePhone',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('mobilePhone',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{demBundle.mobilePhone} #{demBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{demBundle.mobilePhone} #{demBundle.invalid}" value="#{cc.attrs.value.mobilePhone}"/>
                <p:message for="mobilePhone"/>
            </h:panelGroup>
            <h:outputLabel for="phoneNumber" rendered="#{cc.isRendered('phoneNumber',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{demBundle.phoneNumberLabel} <span>#{cc.isRequiredString('phoneNumber',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('phoneNumber',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{demBundle.phoneNumber} #{demBundle.invalid}"
                    id="phoneNumber" maxlength="35"
                    readonly="#{cc.isReadOnly('phoneNumber',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('phoneNumber',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('phoneNumber',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{demBundle.phoneNumber} #{demBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{demBundle.phoneNumber} #{demBundle.invalid}" value="#{cc.attrs.value.phoneNumber}"/>
                <p:message for="phoneNumber"/>
            </h:panelGroup>
        </h:panelGrid>
        <p:outputPanel>
            <script>
                jQuery(document).ready(function () {
                    jQuery('table.informationBlock tr').each(function (index) {
                        jQuery(this).children("td:eq(0),td:eq(2)").addClass("tdlabel");
                        jQuery(this).children("td:eq(1),td:eq(3)").addClass("tdinput");
                    });
                });
            </script>
        </p:outputPanel>
        <style>
            table.informationBlock {
                font-size: 0.9em;
                width:100%;

            }
            .informationBlock label{
                font-weight: 900;
                display:block;
                text-align:right;
                padding-right:10px;
            }
            .informationBlock select{
                padding:5px;
            }
            .informationBlock label span{
                color:red;
                font-size: 1.3em;

            }
            .informationBlock .ui-selectonemenu-label{
                display:block;
            }
            .informationBlock .ui-fieldset-legend{
                background: rgb(0, 51, 102);
                color:#fff;
            }
            .informationBlock.ui-inputtext[readonly="readonly"],
            .informationBlock .hasDatepicker[readonly="readonly"],
            .informationBlock .ui-inputtextarea[readonly="readonly"]{
                background:#EEE;
            }
            .borderB{
                padding-bottom:10px;
            }

            .tdlabel{
                width:15%;
            }
            .tdinput{
                width:35%;
            }
        </style>
    </composite:implementation>
</html>
