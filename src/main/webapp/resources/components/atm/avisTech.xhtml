<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:atm="http://java.sun.com/jsf/composite/components/atm"
    xmlns:composite="http://java.sun.com/jsf/composite"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:p="http://primefaces.org/ui" xmlns:r="http://java.sun.com/jsf/composite/components/rep/elements">
    <composite:interface componentType="org.guce.web.component.Default">
        <f:loadBundle basename="org/guce/web/process/atm/util/Bundle" var="atmBundle"/>
        <composite:attribute name="value" required="true" type="java.lang.Object"/>
        <composite:attribute name="requiredList" type="java.lang.String"/>
        <composite:attribute name="readOnlyList" type="java.lang.String"/>
        <composite:attribute name="renderedList" type="java.lang.String"/>
        <composite:attribute name="updateList" type="java.lang.String"/>
        <composite:attribute default="false" name="required" required="false"/>
        <composite:attribute default="true" name="renderedBoolean" required="false"/>
        <composite:attribute default="false" name="readOnly" required="false"/>
        <composite:attribute name="styleClass" required="false" type="java.lang.String"/>
        <composite:attribute default="false" name="returnSame"/>
        <composite:attribute name="fieldChange"/>
    </composite:interface>
    <composite:implementation>
        <f:loadBundle basename="org/guce/web/process/atm/util/Bundle" var="atmBundle"/>
        <h:panelGrid columns="4" id="cblock" styleClass="#{cc.attrs.styleClass} avisTechBlock">
            <h:outputLabel for="registerNumber" rendered="#{cc.isRendered('registerNumber',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{atmBundle.registerNumberLabel} <span>#{cc.isRequiredString('registerNumber',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('registerNumber',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{atmBundle.registerNumber} #{atmBundle.invalid}"
                    id="registerNumber" maxlength="35"
                    readonly="#{cc.isReadOnly('registerNumber',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('registerNumber',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('registerNumber',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{atmBundle.registerNumber} #{atmBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{atmBundle.registerNumber} #{atmBundle.invalid}" value="#{cc.attrs.value.registerNumber}"/>
                <p:message for="registerNumber"/>
            </h:panelGroup>
            <h:outputLabel for="immatriculation" rendered="#{cc.isRendered('immatriculation',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{atmBundle.immatriculationLabel} <span>#{cc.isRequiredString('immatriculation',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('immatriculation',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{atmBundle.immatriculation} #{atmBundle.invalid}"
                    id="immatriculation" maxlength="35"
                    readonly="#{cc.isReadOnly('immatriculation',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('immatriculation',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('immatriculation',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{atmBundle.immatriculation} #{atmBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{atmBundle.immatriculation} #{atmBundle.invalid}" value="#{cc.attrs.value.immatriculation}"/>
                <p:message for="immatriculation"/>
            </h:panelGroup>
            <h:outputLabel for="technicalName" rendered="#{cc.isRendered('technicalName',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{atmBundle.technicalNameLabel} <span>#{cc.isRequiredString('technicalName',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('technicalName',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{atmBundle.technicalName} #{atmBundle.invalid}"
                    id="technicalName" maxlength="35"
                    readonly="#{cc.isReadOnly('technicalName',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('technicalName',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('technicalName',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{atmBundle.technicalName} #{atmBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{atmBundle.technicalName} #{atmBundle.invalid}" value="#{cc.attrs.value.technicalName}"/>
                <p:message for="technicalName"/>
            </h:panelGroup>
            <h:outputLabel for="deliveryDate" rendered="#{cc.isRendered('deliveryDate',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{atmBundle.deliveryDateLabel} <span>#{cc.isRequiredString('deliveryDate',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('deliveryDate',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:inputText
                    converterMessage="#{atmBundle.deliveryDate} #{atmBundle.invalid}"
                    id="deliveryDate" maxlength="35"
                    readonly="#{cc.isReadOnly('deliveryDate',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    rendered="#{cc.isRendered('deliveryDate',cc.attrs.renderedList,cc.attrs.renderedBoolean)}"
                    required="#{cc.isRequired('deliveryDate',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{atmBundle.deliveryDate} #{atmBundle.required}"
                    size="35" style="width: 140px"
                    validatorMessage="#{atmBundle.deliveryDate} #{atmBundle.invalid}" value="#{cc.attrs.value.deliveryDate}"/>
                <p:message for="deliveryDate"/>
            </h:panelGroup>
            <h:outputLabel for="expiryDate" rendered="#{cc.isRendered('expiryDate',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{atmBundle.expiryDateLabel} <span>#{cc.isRequiredString('expiryDate',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('expiryDate',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:calendar
                    converterMessage="#{atmBundle.expiryDate} #{atmBundle.invalide}"
                    id="expiryDate" mask="true" maxlength="17"
                    pattern="#{atmBundle.dateFormat}"
                    readonly="#{cc.isReadOnly('expiryDate',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    required="#{cc.isRequired('expiryDate',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{atmBundle.expiryDate} #{atmBundle.required}"
                    size="17"
                    validatorMessage="#{atmBundle.expiryDate} #{atmBundle.invalide}" value="#{cc.attrs.value.expiryDate}">
                    <f:convertDateTime pattern="#{atmBundle.dateFormat}"/>
                </p:calendar>
                <p:message for="expiryDate"/>
            </h:panelGroup>
            <h:outputLabel for="status" rendered="#{cc.isRendered('status',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
    #{atmBundle.statusLabel} <span>#{cc.isRequiredString('status',cc.attrs.requiredList,cc.attrs.required)}</span>
            </h:outputLabel>
            <h:panelGroup rendered="#{cc.isRendered('status',cc.attrs.renderedList,cc.attrs.renderedBoolean)}">
                <p:selectOneMenu
                    converterMessage="#{atmBundle.status} #{atmBundle.invalid}"
                    disabled="#{cc.isReadOnly('status',cc.attrs.readOnlyList,cc.attrs.readOnly)}"
                    filter="true" id="status"
                    required="#{cc.isRequired('status',cc.attrs.requiredList,cc.attrs.required)}"
                    requiredMessage="#{atmBundle.status} #{atmBundle.required}"
                    validatorMessage="#{atmBundle.status} #{atmBundle.invalid}" value="#{cc.attrs.value.status}">
                    <f:selectItem
                        itemLabel="#{atmBundle.Select} #{atmBundle.statusLabel}" itemValue="#{null}"/>
                    <f:selectItem itemLabel="#{atmBundle['Active']}" itemValue="act"/>
                    <f:selectItem itemLabel="#{atmBundle['Inactif']}" itemValue="int"/>
                </p:selectOneMenu>
                <p:message for="status"/>
            </h:panelGroup>
        </h:panelGrid>
        <p:outputPanel>
            <script>
                jQuery(document).ready(function () {
                    jQuery('table.avisTechBlock tr').each(function (index) {
                        jQuery(this).children("td:eq(0),td:eq(2)").addClass("tdlabel");
                        jQuery(this).children("td:eq(1),td:eq(3)").addClass("tdinput");
                    });
                });
            </script>
        </p:outputPanel>
        <style>
            table.avisTechBlock {
                font-size: 0.9em;
                width:100%;

            }
            .avisTechBlock label{
                font-weight: 900;
                display:block;
                text-align:right;
                padding-right:10px;
            }
            .avisTechBlock select{
                padding:5px;
            }
            .avisTechBlock label span{
                color:red;
                font-size: 1.3em;

            }
            .avisTechBlock .ui-selectonemenu-label{
                display:block;
            }
            .avisTechBlock .ui-fieldset-legend{
                background: rgb(0, 51, 102);
                color:#fff;
            }
            .avisTechBlock.ui-inputtext[readonly="readonly"],
            .avisTechBlock .hasDatepicker[readonly="readonly"],
            .avisTechBlock .ui-inputtextarea[readonly="readonly"]{
                background:#EEE;
            }
            .borderB{
                padding-bottom:10px;
            }

            .tdlabel{
                width:15%;
            }
            .tdinput{
                width:35%;
            }
        </style>
    </composite:implementation>
</html>
